{
  "test": {
    "prefix": ["basic-test"],
    "body": ["test"],
    "description": "Tsx basic file",
    "type": "file"
  },

  "basic": {
    "prefix": ["basic-react"],
    "body": [
      "import React from \"react\";",
      "",
      "type Props = {};",
      "",
      "const $0: React.FC<Props> = () => {",
      "  return <div></div>;",
      "};",
      "",
      "export default $0;"
    ],
    "description": "Tsx basic file",
    "type": "file"
  },
  "container": {
    "prefix": ["react-container"],
    "body": [
      "import type { NextPage } from \"next\";",
      "import { use$0 } from \"$0/$0.hook\";",
      "import { $0View } from \"$0/$0.view\";",
      "",
      "export const $0: NextPage = () => {",
      "  const hook = $0Hook();",
      "  return <$0View {...hook} />;",
      "};"
    ],
    "description": "Container for react component",
    "type": "file"
  },
  "hook": {
    "prefix": ["react-hook"],
    "body": [
      "import { useEffect, useState } from \"react\";",
      "",
      "export const use$0 = () => {",
      "",
      "  useEffect(() => {",
      "  }, []);",
      "",
      "  return { };",
      "};"
    ],
    "description": "Hook for react component",
    "type": "file"
  },
  "View": {
    "prefix": ["react-view"],
    "body": [
      "import React from \"react\";",
      "",
      "export type $0ViewProps = {",
      "};",
      "",
      "export const $0View = ({",
      "}: $0ViewProps) => {",
      "  return (",
      "  );",
      "};"
    ],
    "description": "View for react component",
    "type": "file"
  },
  "Views": {
    "prefix": ["react-views"],
    "bodys": [
      {
        "prefix": "prefix",
        "suffix": "suffix",
        "body": [
          "import React from \"react\";",
          "",
          "export type $0ViewProps = {",
          "};",
          "",
          "export const $0View = ({",
          "}: $0ViewProps) => {",
          "  return (",
          "  );",
          "};"
        ]
      }
    ],
    "description": "View for react component",
    "type": "array"
  }
}
